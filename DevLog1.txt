Újrakezdés

Az adatszerkezetek / classok tisztázása

modul _global
GLobális változók
_global.playercount

modul table
class Table 3 játékosra az adatszerkezet 3 szintű dict:
    {'S': {'A': 4, 'B': 4, 'C': 4},
    'F': {1: ('', 0), 2: ('', 0), 3: ('', 0), 4: ('', 0), 5: ('', 0), 6: ('', 0), 7: ('', 0), 8: ('', 0), 9: ('', 0), 10: ('', 0), 11: ('', 0), 12: ('', 0), 13: ('', 0), 14: ('', 0), 15: ('', 0), 16: ('', 0), 17: ('', 0), 18: ('', 0), 19: ('', 0), 20: ('', 0), 21: ('', 0), 22: ('', 0), 23: ('', 0), 24: ('', 0), 25: ('', 0), 26: ('', 0), 27: ('', 0), 28: ('', 0), 29: ('', 0), 30: ('', 0), 31: ('', 0), 32: ('', 0), 33: ('', 0), 34: ('', 0), 35: ('', 0), 36: ('', 0), 37: ('', 0), 38: ('', 0), 39: ('', 0), 40: ('', 0)},
    'H': {'A': {1: (0,), 2: (0,), 3: (0,), 4: (0,)}, 'B': {1: (0,), 2: (0,), 3: (0,), 4: (0,)}, 'C': {1: (0,), 2: (0,), 3: (0,), 4: (0,)}}}

modul players
Adatszerkezet:
Többszintű objektumok mindenhol dictionary
Players: az összes játékos, áll playerből
player: van neki piece (4 db) benne egy tuple: startban bool, fieldnr int 1-40 saját koord, házban tuple (0,1,0,3) melyik piece hol áll

példa:
Players['a'].['p1'] = (bool, fieldnr, housenr)
Players obj player subobj piece subobj = dict
egy piece adatai:
self.players[chr(i + 65)].pieces['p'+str(j+1)].piece['S'] bool
self.players[chr(i + 65)].pieces['p'+str(j+1)].piece['F'] 0-40, saját kr
self.players[chr(i + 65)].pieces['p'+str(j+1)].piece['H'] 0,0,0,0 melyik bábu áll ott


ownCoordOnTableCs = {}
tableCoordsOnOwnCs = {}



metódusok

ownCoordOnTableCs()

tableCoordOnOwnCs()
mindkettő egy dict

mindkettő előre fel van töltve